let express,bodyParser,mongoose,cors,authRoute,userRoute,productRoute,cartRoute,stripeRoute,orderRoute;_148‍.w("express",[["default",["express"],function(v){express=v}]]);_148‍.w("body-parser",[["default",["bodyParser"],function(v){bodyParser=v}]]);_148‍.w("mongoose",[["default",["mongoose"],function(v){mongoose=v}]]);_148‍.w("cors",[["default",["cors"],function(v){cors=v}]]);_148‍.w("./routes/auth",[["default",["authRoute"],function(v){authRoute=v}]]);_148‍.w("./routes/users",[["default",["userRoute"],function(v){userRoute=v}]]);_148‍.w("./routes/product",[["default",["productRoute"],function(v){productRoute=v}]]);_148‍.w("./routes/cart",[["default",["cartRoute"],function(v){cartRoute=v}]]);_148‍.w("./routes/stripe",[["default",["stripeRoute"],function(v){stripeRoute=v}]]);_148‍.w("./routes/order",[["default",["orderRoute"],function(v){orderRoute=v}]]);









const app = express();
const PORT = process.env.PORT || 5000;

app.use(cors());
app.use(express.json());
app.use("/api/users", userRoute);
app.use("/api/auth", authRoute);
app.use("/api/products", productRoute);
app.use("/api/cart", cartRoute);
app.use("/api/checkout", stripeRoute);
app.use("/api/order", orderRoute);

app.get("/test", (req, res) => {
  res.json("working");
});

const CONNECTION_URL =
  "mongodb+srv://ecommerce:123123123@eccom-mern.hrjjwlo.mongodb.net/?retryWrites=true&w=majority";

mongoose
  .connect(CONNECTION_URL, { useNewUrlParser: true, useUnifiedTopology: true })
  .then(() =>
    app.listen(PORT, () =>
      console.log(`Server Running on Port: http://localhost:${PORT}`)
    )
  )
  .catch((error) => console.log(`${error} did not connect`));

mongoose.set("useFindAndModify", false);
